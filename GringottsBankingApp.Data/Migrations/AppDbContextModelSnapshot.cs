// <auto-generated />
using System;
using GringottsBankingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GringottsBankingApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GringottsBankingApp.Core.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deposit = 50m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Deposit = 150m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Deposit = 250m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Deposit = 100m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Deposit = 200m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Deposit = 300m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Deposit = 80m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            Deposit = 90m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            Deposit = 100m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Deposit = 400m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 11,
                            Deposit = 500m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 12,
                            Deposit = 600m,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("GringottsBankingApp.Core.Models.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ReceiverAccountId")
                        .HasColumnType("int");

                    b.Property<int>("SenderAccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("TransferAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("GringottsBankingApp.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gnarlak"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gornuk"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Griphook"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Burgock"
                        });
                });

            modelBuilder.Entity("GringottsBankingApp.Core.Models.Account", b =>
                {
                    b.HasOne("GringottsBankingApp.Core.Models.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GringottsBankingApp.Core.Models.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
